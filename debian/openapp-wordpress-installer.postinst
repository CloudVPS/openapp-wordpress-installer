#!/bin/sh
# postinst script for wordpress
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

INSTALLDIR=/var/www

fatal() {
	echo "ERROR: $1"
	[ -f /tmp/wordpress-$$.tar.gz ] && rm -f /tmp/wordpress-$$.tar.gz
	exit 1
}

install_wordpress() {
	MIRROR=http://download.openpanel.com/openapp-files/wordpress
	PASSWORD=`pwgen -s 10`

	MYSQL=/usr/bin/mysql
	OPTS="--defaults-file=/etc/mysql/debian.cnf"

	echo "Creating backup of current /var/www in /var/backups/var.www.wordpress.tgz"
	tar zcf /var/backups/var.www.wordpress.tgz /var/www/

	echo "Removing data in /var/www"
	rm -rf /var/www
	mkdir /var/www

	[ -x /usr/bin/wget ] && wget -q -O /tmp/wordpress-$$.tar.gz ${MIRROR}/wordpress-newest.tar.gz
	[ -f /tmp/wordpress-$$.tar.gz ] || /usr/bin/curl -s -o /tmp/wordpress-$$.tar.gz ${MIRROR}/wordpress-newest.tar.gz
	if [ $? -eq 0 ]; then
		mkdir -p ${INSTALLDIR} || fatal "Unable to create directory ${INSTALLDIR}"
		cd ${INSTALLDIR} || fatal "Unable to go into directory ${INSTALLDIR}"
		tar zxf /tmp/wordpress-$$.tar.gz || fatal "Unable to extract wordpress package into ${INSTALLDIR}"
		${MYSQL} ${OPTS} -e "CREATE DATABASE wordpress CHARACTER SET utf8 COLLATE utf8_general_ci;" || fatal "Unable to create database wordpress"
		${MYSQL} ${OPTS} -e "GRANT USAGE ON mysql.* TO 'wordpress'@'localhost' IDENTIFIED BY '$PASSWORD';" || fatal "Unable to create mysql-user wordpress"
		${MYSQL} ${OPTS} -e "GRANT ALL PRIVILEGES ON wordpress.* to 'wordpress'@'localhost';"|| fatal "Unable to set permissions to mysql-user wordpress"
		/usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf flush-privileges || fatal "Unable to flush mysql privileges"

		mv ${INSTALLDIR}/installation/configuration.php-dist ${INSTALLDIR}/configuration.php.tmp || fatal "Unable to move configuration.php to temporary file"
		cat ${INSTALLDIR}/configuration.php.tmp | \
		  sed -e "s#\$user = ''#\$user = 'wordpress'#" | \
		  sed -e "s#\$password = ''#\$password = '${PASSWORD}'#" | \
		  sed -e "s#\$db = ''#\$db = 'wordpress'#" > ${INSTALLDIR}/configuration.php
                [ $? -eq 0 ] || fatal "Unable to prepare ${INSTALLDIR}/configuration.php"
		cat ${INSTALLDIR}/installation/sql/mysql/wordpress.sql | sed -e 's/#__/jos_/g' | ${MYSQL} ${OPTS} wordpress || fatal "Unable to add data to the database"
		${MYSQL} ${OPTS} wordpress -e "CREATE INDEX client_id ON jos_template_styles (client_id);"
	fi
	echo "Fixing permissions on /var/www"
	chown -R www-data:www-data /var/www
	chmod 640 ${INSTALLDIR}/configuration.php
	rm -rf ${INSTALLDIR}/installation/
	rm -f ${INSTALLDIR}/configuration.php.tmp
	rm -f /tmp/wordpress-$$.tar.gz
}

case "$1" in
    configure)
	if [ -z $2 ]; then
		echo "No old version of wordpress detected. Assuming new install"
		install_wordpress
		/usr/sbin/invoke-rc.d apache2 restart
		echo "Please run openapp-wordpress-passwd if you're not installing this package in an openapp environment."
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure|triggered)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
